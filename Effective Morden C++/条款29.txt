条款29：假定移动操作不存在、成本高、未使用


语言不止是允许编译器使用移动来代替复杂，实际上还会要求他们这么做

在 C++11 标准库中，所有的容器都支持移动操作，但是不一定成本低廉

对于 std::string 提供了常数时间的移动和线性时间的复制，但是在使用了基于 SSO 的实现的前提下，对于小型字符串的移动并不比复制快，
因为通常在移动的氢能优于复制的背后‘仅复制一个指针’这种把戏就失灵了

标准库中的一些容器提供了强异常安全保证，并且为了确保依赖这样保证的 C++98 遗留代码在升级到 C++11 时不会破坏这样的保证，
底层的复制操作只有在已知移动不会抛出异常的前提下才会被使用，也就导致很多情况下虽然不会抛出异常，但是只要移动操作没有noexcept声明，
就依然使用复制

所以在这样几个场景中，移动语义并不会给你带来收益：没有移动操作、移动不能更快、移动不可用